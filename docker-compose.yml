version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: order-service-postgres
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: order-service-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=kalo
      - RABBITMQ_DEFAULT_PASS=kalo
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    container_name: order-service-app
    depends_on:
      - postgres
      - rabbitmq
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/orderdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: kalo
      SPRING_RABBITMQ_PASSWORD: kalo
      SPRING_RABBITMQ_TEMPLATE_EXCHANGE: order.exchange
    ports:
      - "8080:8080"
    restart: on-failure

volumes:
  postgres_data:
  rabbitmq_data: